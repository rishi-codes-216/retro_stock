import yfinance as yf
import pandas as pd
import pandas_market_calendars as mcal
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import random

StockName = ['LLY', 'HUM', 'JNJ', 'DE', 'CAT', 'TJX', 'MS']
RandStockName = ['BRK-B', 'PINS', 'AMZN', 'SOFI', 'RDFN']
# sp500 = pd.read_html('https://en.wikipedia.org/wiki/List_of_S%26P_500_companies')[0]
# tickers = sp500['Symbol'].tolist()
# RandStockName = random.sample(tickers, 7)

open_prices = [[], [], [], [], [], [], []]
rand_open_prices = [[], [], [], [], [], [], []]
heptad_prices = []
anti_heptad_prices = []
rand_heptad_prices = []
spy_prices = []
dates = []

nyse = mcal.get_calendar('NYSE')
schedule = nyse.schedule(start_date='2023-01-01', end_date='2023-06-07')

for market_day in schedule.index:
    heptad_prices.append(0.0)
    anti_heptad_prices.append(0.0)
    rand_heptad_prices.append(0.0)
    spy_prices.append(0.0)
    date_str = market_day.strftime('%b %d')
    dates.append(date_str)

SPY = yf.Ticker('spy')
FirstPrice = SPY.history(start='2023-01-03', end='2023-01-04')['Open']
FirstPrice = float(FirstPrice)
SPY_shares = 10000 / FirstPrice

for i in range(0, len(StockName)):
    ticker1 = yf.Ticker(StockName[i])
    print(StockName[i])
    OriginalPrice = float(ticker1.history(start='2023-01-03', end='2023-01-04')['Open'])
    TenKDivided = 10000 / len(StockName)
    Shares = TenKDivided / OriginalPrice

    start_date = pd.Timestamp('2023-01-03')
    ticker_data = ticker1.history(start=start_date)
    open_prices[i] = ticker_data['Open'].values

    for k in range(len(schedule.index)):
        open_prices[i][k] = open_prices[i][k] * Shares
        heptad_prices[k] += open_prices[i][k] - TenKDivided
        anti_heptad_prices[k] += TenKDivided - open_prices[i][k]

# for j in range(0, len(RandStockName)):
#     ticker1 = yf.Ticker(RandStockName[j])
#     print(RandStockName[j])
#     OriginalPrice = float(ticker1.history(start='2023-01-03', end='2023-01-04')['Open'])
#     TenKDivided = 10000 / len(RandStockName)
#     Shares = TenKDivided / OriginalPrice
#
#     start_date = pd.Timestamp('2023-01-03')
#     ticker_data = ticker1.history(start=start_date)
#     rand_open_prices[j] = ticker_data['Open'].values
#
#     for k in range(len(schedule.index)):
#         rand_open_prices[j][k] = rand_open_prices[j][k] * Shares
#         rand_heptad_prices[k] += rand_open_prices[j][k] - TenKDivided

spy_data = SPY.history(start=start_date)
spy_prices = spy_data['Open'].values
for k in range(len(schedule.index)):
    spy_prices[k] = (spy_prices[k] * SPY_shares) - 10000

plt.plot(dates, heptad_prices, 'g', label="Cramer's Heptad")
plt.plot(dates, anti_heptad_prices, 'r', label="Shorting Cramer's Heptad")
# plt.plot(dates, rand_heptad_prices, 'm', label="Frankel's Five")
plt.plot(dates, spy_prices, 'b', label="S&P500")
plt.xlabel('Date')
plt.ylabel('Price')
plt.ylabel('Change in value of holdings from $10,000')
plt.legend()
plt.gca().xaxis.set_major_locator(ticker.MultipleLocator(10))
plt.grid(True, which='major', axis='both', linestyle=':', linewidth='0.5', color='black')
plt.grid(True)
plt.show()
